I"Û5<h1 id="controlling-text-inputs-is-simple-but-checkboxes-and-radio-buttons-are-not-alike">Controlling text inputs is simple, but checkboxes and radio buttons are not alike‚Ä¶</h1>

<p>OK, you already know how to control a text field‚Ä¶ wait, maybe you don‚Äôt. Maybe you came here because you were searching for that and this blog came up because I mentioned it.</p>

<p>OK, review of how to control a text field (scroll sideways to see all the code):</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="c1">// you'll need useState</span>
<span class="k">import</span> <span class="nx">React</span><span class="p">,</span> <span class="p">{</span><span class="nx">useState</span><span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react</span><span class="dl">'</span>
<span class="c1">// set up a state variable to hold the value of the field, initialized to blank</span>
<span class="kd">const</span> <span class="p">[</span><span class="nx">formField</span><span class="p">,</span> <span class="nx">setFormField</span><span class="p">]</span> <span class="o">=</span> <span class="nx">useState</span><span class="p">(</span><span class="dl">""</span><span class="p">)</span>
<span class="c1">// in your JSX, you use the state variable and function to set and change the field's value as the user types</span>
<span class="o">&lt;</span><span class="nx">form</span><span class="o">&gt;</span>
<span class="o">&lt;</span><span class="nx">input</span> <span class="nx">type</span><span class="o">=</span><span class="dl">"</span><span class="s2">text</span><span class="dl">"</span> <span class="nx">value</span><span class="o">=</span><span class="p">{</span><span class="nx">formField</span><span class="p">}</span> <span class="nx">onChange</span><span class="o">=</span><span class="p">{</span><span class="nx">e</span> <span class="o">=&gt;</span> <span class="nx">setFormField</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">value</span><span class="p">)}</span> <span class="sr">/</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="sr">/form&gt;</span></code></pre></figure>

<p>Of course, if you need to use that field value in a different component, you‚Äôll have to pass down a function as props to get it there‚Ä¶ but I digress.</p>

<h2 id="the-real-input-types-i-wanted-to-blog-about">The real input types I wanted to blog about:</h2>

<h1 id="select-dropdown-radio-and-checkbox">Select (dropdown), radio, and checkbox</h1>

<p><strong>Checkboxes</strong> are simple. They‚Äôre boolean and you just add the word ‚Äúchecked‚Äù if true (the boolean is a state variable of course):</p>

<p><code class="language-plaintext highlighter-rouge">&lt;input type="checkbox" name="colors" value="red" id="red" {isRed ? "checked" : null} onChange={e =&gt; setIsRed{!isRed}} /&gt;</code></p>

<p>I have a console log set up in the onChange attribute for each of the following checkboxes. Go ahead and open your dev tools <em>right now</em> (command-option-j) and see what happens when you check and uncheck them:</p>

<p><input type="checkbox" name="test-box" onchange="console.log('the Try it! checkbox changed')" />
<label for="test-box">Try it!</label>
<input type="checkbox" name="other-test-box" onchange="console.log('the Mix it up! checkbox changed')" />
<label for="other-test-box">Mix it up!</label></p>

<p>Notice how they change when you check them AND when you uncheck them‚Ä¶ you‚Äôll notice a difference when we do radio buttons.</p>
<hr />

<p><strong>Selects</strong> (which most people call dropdowns) are different in React than in HTML. In HTML you put the default selection in the <code class="language-plaintext highlighter-rouge">&lt;option&gt;</code> tag, but in React it has to go in the <code class="language-plaintext highlighter-rouge">&lt;select&gt;</code> tag‚Äôs value attribute (which, since you‚Äôre setting it from a state variable, makes it a controlled input):</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="k">import</span> <span class="p">{</span><span class="nx">useState</span><span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react</span><span class="dl">'</span>
<span class="kd">const</span> <span class="p">[</span><span class="nx">size</span><span class="p">,</span> <span class="nx">setSize</span><span class="p">]</span> <span class="o">=</span> <span class="nx">useState</span><span class="p">(</span><span class="dl">"</span><span class="s2">Small</span><span class="dl">"</span><span class="p">)</span>
<span class="p">...</span>
  <span class="o">&lt;</span><span class="nx">select</span> 
    <span class="nx">className</span><span class="o">=</span><span class="dl">"</span><span class="s2">form-control</span><span class="dl">"</span> 
    <span class="nx">name</span><span class="o">=</span><span class="dl">"</span><span class="s2">size</span><span class="dl">"</span> 
    <span class="nx">value</span><span class="o">=</span><span class="p">{</span><span class="nx">size</span><span class="p">}</span> 
    <span class="nx">onChange</span><span class="o">=</span><span class="p">{</span><span class="nx">e</span> <span class="o">=&gt;</span> <span class="nx">setSize</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">value</span><span class="p">)}</span><span class="o">&gt;</span>
    <span class="o">&lt;</span><span class="nx">option</span> <span class="nx">value</span><span class="o">=</span><span class="dl">"</span><span class="s2">Small</span><span class="dl">"</span><span class="o">&gt;</span><span class="nx">Small</span><span class="o">&lt;</span><span class="sr">/option</span><span class="err">&gt;
</span>    <span class="o">&lt;</span><span class="nx">option</span> <span class="nx">value</span><span class="o">=</span><span class="dl">"</span><span class="s2">Medium</span><span class="dl">"</span><span class="o">&gt;</span><span class="nx">Medium</span><span class="o">&lt;</span><span class="sr">/option</span><span class="err">&gt;
</span>    <span class="o">&lt;</span><span class="nx">option</span> <span class="nx">value</span><span class="o">=</span><span class="dl">"</span><span class="s2">Large</span><span class="dl">"</span><span class="o">&gt;</span><span class="nx">Large</span><span class="o">&lt;</span><span class="sr">/option</span><span class="err">&gt;
</span>  <span class="o">&lt;</span><span class="sr">/select&gt;</span></code></pre></figure>

<hr />

<p>I had fun figuring out <strong>radio buttons</strong>. Try it. Open your dev tools console (really! do it!) and click these radio buttons. I have console logs in the <code class="language-plaintext highlighter-rouge">onChange</code> attribute for each radio button:</p>

<form>
<input type="radio" name="kingdom" id="Animal" value="Animal" onchange="console.log('Animal changed!')" />
<label for="Animal">Animal</label>
<input type="radio" name="kingdom" id="Vegetable" value="Vegetable" onchange="console.log('Vegetable changed!')" />
<label for="Animal">Vegetable</label>
<input type="radio" name="kingdom" id="Mineral" value="Mineral" onchange="console.log('Mineral changed!')" />
<label for="Animal">Mineral</label>
</form>

<p>Each radio button comes from a stand-alone <code class="language-plaintext highlighter-rouge">&lt;input&gt;</code> tag, and unlike select options they are not wrapped in any containing tag. But they <em>are</em> interrelated (due to sharing the same ‚Äòname‚Äô attribute), so unlike a checkbox, <code class="language-plaintext highlighter-rouge">onChange</code> only happens for each button when they are selected, not deselected.</p>

<p>To control radio buttons in React, you set a boolean for the <code class="language-plaintext highlighter-rouge">checked</code> attribute, based on your state variable. In our example:</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="o">&lt;</span><span class="nx">form</span><span class="o">&gt;</span>
<span class="o">&lt;</span><span class="nx">input</span> <span class="nx">type</span><span class="o">=</span><span class="dl">"</span><span class="s2">radio</span><span class="dl">"</span> <span class="nx">name</span><span class="o">=</span><span class="dl">"</span><span class="s2">kingdom</span><span class="dl">"</span> <span class="nx">id</span><span class="o">=</span><span class="dl">"</span><span class="s2">Animal</span><span class="dl">"</span> <span class="nx">value</span><span class="o">=</span><span class="dl">"</span><span class="s2">Animal</span><span class="dl">"</span> <span class="nx">checked</span><span class="o">=</span><span class="p">{</span><span class="nx">kingdom</span> <span class="o">===</span> <span class="dl">"</span><span class="s2">Animal</span><span class="dl">"</span> <span class="p">?</span> <span class="kc">true</span> <span class="p">:</span> <span class="kc">false</span><span class="p">}</span> <span class="nx">onChange</span><span class="o">=</span><span class="p">{</span><span class="nx">e</span> <span class="o">=&gt;</span> <span class="nx">setKingdom</span><span class="p">(</span><span class="dl">"</span><span class="s2">Animal</span><span class="dl">"</span><span class="p">)}</span> <span class="sr">/</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="nx">label</span> <span class="k">for</span><span class="o">=</span><span class="dl">"</span><span class="s2">Animal</span><span class="dl">"</span><span class="o">&gt;</span><span class="nx">Animal</span><span class="o">&lt;</span><span class="sr">/label</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="nx">input</span> <span class="nx">type</span><span class="o">=</span><span class="dl">"</span><span class="s2">radio</span><span class="dl">"</span> <span class="nx">name</span><span class="o">=</span><span class="dl">"</span><span class="s2">kingdom</span><span class="dl">"</span> <span class="nx">id</span><span class="o">=</span><span class="dl">"</span><span class="s2">Vegetable</span><span class="dl">"</span> <span class="nx">value</span><span class="o">=</span><span class="dl">"</span><span class="s2">Vegetable</span><span class="dl">"</span> <span class="nx">checked</span><span class="o">=</span><span class="p">{</span><span class="nx">kingdom</span> <span class="o">===</span> <span class="dl">"</span><span class="s2">Vegetable</span><span class="dl">"</span> <span class="p">?</span> <span class="kc">true</span> <span class="p">:</span> <span class="kc">false</span><span class="p">}</span> <span class="nx">onChange</span><span class="o">=</span><span class="p">{</span><span class="nx">e</span> <span class="o">=&gt;</span> <span class="nx">setKingdom</span><span class="p">(</span><span class="dl">"</span><span class="s2">Vegetable</span><span class="dl">"</span><span class="p">)}</span> <span class="sr">/</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="nx">label</span> <span class="k">for</span><span class="o">=</span><span class="dl">"</span><span class="s2">Animal</span><span class="dl">"</span><span class="o">&gt;</span><span class="nx">Vegetable</span><span class="o">&lt;</span><span class="sr">/label</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="nx">input</span> <span class="nx">type</span><span class="o">=</span><span class="dl">"</span><span class="s2">radio</span><span class="dl">"</span> <span class="nx">name</span><span class="o">=</span><span class="dl">"</span><span class="s2">kingdom</span><span class="dl">"</span> <span class="nx">id</span><span class="o">=</span><span class="dl">"</span><span class="s2">Mineral</span><span class="dl">"</span> <span class="nx">value</span><span class="o">=</span><span class="dl">"</span><span class="s2">Mineral</span><span class="dl">"</span> <span class="nx">checked</span><span class="o">=</span><span class="p">{</span><span class="nx">kingdom</span> <span class="o">===</span> <span class="dl">"</span><span class="s2">Mineral</span><span class="dl">"</span> <span class="p">?</span> <span class="kc">true</span> <span class="p">:</span> <span class="kc">false</span><span class="p">}</span> <span class="nx">onChange</span><span class="o">=</span><span class="p">{</span><span class="nx">e</span> <span class="o">=&gt;</span> <span class="nx">setKingdom</span><span class="p">(</span><span class="dl">"</span><span class="s2">Mineral</span><span class="dl">"</span><span class="p">)}</span> <span class="sr">/</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="nx">label</span> <span class="k">for</span><span class="o">=</span><span class="dl">"</span><span class="s2">Animal</span><span class="dl">"</span><span class="o">&gt;</span><span class="nx">Mineral</span><span class="o">&lt;</span><span class="sr">/label</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="sr">/form&gt;</span></code></pre></figure>

<hr />

<p>The fact that every input type is handled differently in HTML and controlled differently in React can be a bit confusing, but if you play with them you
will get the hang of it. And when you do, some other, more internally-consistent language will replace HTML and all the old websites will vanish in the night, like Adobe Flash or Swatch Internet Time.</p>

<p>We could complain about the inevitable obsolescence of any tech skill, but I‚Äôd rather not complain. <strong>I‚Äôd rather be coding.</strong></p>
:ET