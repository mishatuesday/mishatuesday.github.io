I"˘*<h2 id="why-wont-this-cookie-persist">‚ÄúWhy won‚Äôt this cookie persist?‚Äù</h2>

<p>I was having trouble getting session cookies to persist in Rails. Then I
stumbled on to localStorage.</p>

<p><em>Some people will tell you that using localStorage circumvents cookie
consent laws, but this is not the case. This is not legal advice, but
whether you can store data on a user‚Äôs equipment without asking has nothing to do with what method you‚Äôre using, and everything to do
with whether it is</em> necessary <em>for a service or function that the user
has requested, i.e. setting dark mode or logging in.</em></p>

<p><strong>The beauty of localStorage</strong></p>

<p>When a user submits a username/password combination, you create a session
instance in your back end. In Ruby on Rails, it might look something like
this:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="k">class</span> <span class="nc">SessionsController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>

    <span class="k">def</span> <span class="nf">create</span>
        <span class="n">params</span><span class="p">.</span><span class="nf">require</span><span class="p">(</span><span class="ss">:email</span><span class="p">,</span> <span class="ss">:password</span><span class="p">)</span>
        <span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span class="p">.</span><span class="nf">find_by</span><span class="p">(</span><span class="ss">email: </span><span class="n">params</span><span class="p">[</span><span class="ss">:email</span><span class="p">])</span>
        <span class="k">if</span> <span class="n">user</span><span class="o">&amp;</span><span class="p">.</span><span class="nf">authenticate</span><span class="p">(</span><span class="n">params</span><span class="p">[</span><span class="ss">:password</span><span class="p">])</span>
            <span class="n">render</span> <span class="ss">json: </span><span class="n">user</span><span class="p">,</span> <span class="ss">status: :ok</span>
        <span class="k">else</span>
            <span class="n">render</span> <span class="ss">json: </span><span class="p">{</span><span class="ss">error: </span><span class="s2">"Login invalid"</span><span class="p">},</span> <span class="ss">status: :not_found</span>
        <span class="k">end</span>
    <span class="k">end</span></code></pre></figure>

<p>Notice there‚Äôs no <code class="language-plaintext highlighter-rouge">session[:anything]</code> in there. So how does my front end (React for instance) know that the user is logged in?</p>

<h2 id="easy">Easy</h2>
<p>There are (at least) two ways to set a localStorage key/value pair.
I use <code class="language-plaintext highlighter-rouge">localStorage.email = r.email</code>.
You can also use bracket notation: <code class="language-plaintext highlighter-rouge">localStorage['email'] = r.email</code>.</p>

<p>When you want to get rid of it, it‚Äôs <code class="language-plaintext highlighter-rouge">localStorage.removeItem("name")</code>
Or you can nuke everything in localStorage with <code class="language-plaintext highlighter-rouge">localStorage.clear</code>
In my opinion, this method is easier than dealing with session cookies. 
There‚Äôs no configuration to worry about, it just works.</p>

<p>So here‚Äôs my login function in React:</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript">    <span class="kd">function</span> <span class="nx">onLogin</span><span class="p">()</span> <span class="p">{</span>
        <span class="nx">fetch</span><span class="p">(</span><span class="dl">"</span><span class="s2">http://localhost:3000/login</span><span class="dl">"</span><span class="p">,</span> <span class="p">{</span>
            <span class="na">method</span><span class="p">:</span> <span class="dl">"</span><span class="s2">POST</span><span class="dl">"</span><span class="p">,</span>
            <span class="na">headers</span><span class="p">:</span> <span class="p">{</span>
                <span class="dl">"</span><span class="s2">Content-Type</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">application/json</span><span class="dl">"</span><span class="p">,</span>
                <span class="dl">"</span><span class="s2">Accept</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">application/json</span><span class="dl">"</span>
            <span class="p">},</span>
            <span class="na">body</span><span class="p">:</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">formData</span><span class="p">)</span>
        <span class="p">})</span>
        <span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">res</span> <span class="o">=&gt;</span> <span class="nx">res</span><span class="p">.</span><span class="nx">json</span><span class="p">())</span>
        <span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">r</span> <span class="o">=&gt;</span> <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">email</span><span class="p">)</span> <span class="p">{</span>
                <span class="nx">localStorage</span><span class="p">.</span><span class="nx">removeItem</span><span class="p">(</span><span class="dl">"</span><span class="s2">error</span><span class="dl">"</span><span class="p">)</span>
                <span class="nx">localStorage</span><span class="p">.</span><span class="nx">email</span> <span class="o">=</span> <span class="nx">r</span><span class="p">.</span><span class="nx">email</span>
            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
                <span class="nx">localStorage</span><span class="p">.</span><span class="nx">error</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">invalid email/password combination</span><span class="dl">"</span>
            <span class="p">}</span>
            <span class="nx">setFormData</span><span class="p">({</span><span class="na">email</span><span class="p">:</span> <span class="dl">""</span><span class="p">,</span> <span class="na">password</span><span class="p">:</span> <span class="dl">""</span><span class="p">})</span>
            <span class="nx">toggleLoggedIn</span><span class="p">()</span>
        <span class="p">})</span>
    <span class="p">}</span></code></pre></figure>

<p>I added <code class="language-plaintext highlighter-rouge">toggleLoggedIn()</code> which sets a Boolean state variable, because I
needed some components to re-render upon login. <code class="language-plaintext highlighter-rouge">localStorage.error</code> is so my login form can conditionally render the error message if present.</p>

<p>Finally, my components can conditionally render elements based on whether
or not you are logged in. There‚Äôs a concessions page where you can see
all the concessions available if you‚Äôre not logged in, but you can only
add or edit concessions if you‚Äôre logged in:</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript">    <span class="k">return</span> <span class="p">(</span>
    <span class="o">&lt;</span><span class="nx">div</span><span class="o">&gt;</span>
        <span class="o">&lt;</span><span class="nx">img</span> <span class="nx">src</span><span class="o">=</span><span class="p">{</span><span class="nx">props</span><span class="p">.</span><span class="nx">concession</span><span class="p">.</span><span class="nx">image</span><span class="p">}</span> <span class="nx">alt</span><span class="o">=</span><span class="p">{</span><span class="nx">props</span><span class="p">.</span><span class="nx">concession</span><span class="p">.</span><span class="nx">name</span><span class="p">}</span><span class="sr">/</span><span class="err">&gt;
</span>        <span class="o">&lt;</span><span class="nx">div</span><span class="o">&gt;</span><span class="nx">Name</span><span class="p">:</span> <span class="p">{</span><span class="nx">concession</span><span class="p">.</span><span class="nx">name</span><span class="p">}</span><span class="o">&lt;</span><span class="sr">/div</span><span class="err">&gt;
</span>        <span class="o">&lt;</span><span class="nx">div</span><span class="o">&gt;</span><span class="nx">Price</span><span class="p">:</span> <span class="p">{</span><span class="nx">concession</span><span class="p">.</span><span class="nx">price</span><span class="p">}</span><span class="o">&lt;</span><span class="sr">/div</span><span class="err">&gt;
</span>        <span class="p">{</span><span class="nx">localStorage</span><span class="p">.</span><span class="nx">email</span> <span class="p">?</span> 
        <span class="o">&lt;</span><span class="nx">button</span> <span class="nx">onClick</span><span class="o">=</span><span class="p">{()</span> <span class="o">=&gt;</span> <span class="nx">deleteConcession</span><span class="p">(</span><span class="nx">concession</span><span class="p">)</span> <span class="p">}</span><span class="o">&gt;</span><span class="nx">Delete</span> <span class="nx">Concession</span><span class="o">&lt;</span><span class="sr">/button</span><span class="err">&gt;
</span>        <span class="o">&lt;</span><span class="nx">NavLink</span> <span class="nx">to</span><span class="o">=</span><span class="p">{</span><span class="s2">`/concession/</span><span class="p">${</span><span class="nx">props</span><span class="p">.</span><span class="nx">concession</span><span class="p">.</span><span class="nx">id</span><span class="p">}</span><span class="s2">/EditForm`</span><span class="p">}</span> <span class="nx">name</span><span class="o">=</span><span class="dl">"</span><span class="s2">Edit Concession</span><span class="dl">"</span><span class="o">&gt;</span><span class="nx">Edit</span> <span class="nx">Concession</span>
        <span class="o">&lt;</span><span class="sr">/NavLink&gt;</span><span class="err"> 
</span>        <span class="p">:</span> <span class="kc">null</span><span class="p">}</span>
    <span class="o">&lt;</span><span class="sr">/div</span><span class="err">&gt;
</span>    <span class="p">)</span></code></pre></figure>

<p>As my favorite fake user data account, David Pumpkins, would say: ‚ÄúAny questions?‚Äù</p>

<p><img src="https://raw.githubusercontent.com/mishatuesday/mishatuesday.github.io/main/_posts/rosebud-amphitheater.png" alt=" concert stage with lighting and a crowd of people in the audience" title="Don't judge, it's a work in progress. I'm still in bootcamp!" /></p>

<p>Actually, never mind. I probably won‚Äôt answer any questions, because <strong>I‚Äôd rather be coding.</strong></p>
:ET